{"version":3,"sources":["components/Phonebook.module.css","components/ContactForm/ContactForm .js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","nanoid","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onFormSubmit","reset","className","styles","form","onSubmit","this","htmlFor","label","input","type","pattern","title","required","onChange","id","button","Component","Filter","filterValue","onChangeFilter","filterInputId","FilterThumb","ContactItem","onDeleteContact","contactsItem","contactsName","contactsNumber","contactsButton","ContactList","contacts","console","log","contactsList","map","contact","App","filter","addContact","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","filteredContacts","container","React","propTypes","PropTypes","array","string","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f85bf612.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__3-qoB\",\"form\":\"Phonebook_form__2OQko\",\"label\":\"Phonebook_label__3gkHP\",\"input\":\"Phonebook_input__3BS0N\",\"button\":\"Phonebook_button__1bZxq\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../Phonebook.module.css\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  nameInputId = nanoid();\r\n  numberInputId = nanoid();\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onFormSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId} className={styles.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={this.handleChange}\r\n          id={this.nameInputId}\r\n          value={this.state.name}\r\n        />\r\n        <label htmlFor={this.numberInputId} className={styles.label}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={this.handleChange}\r\n          id={this.numberInputId}\r\n          value={this.state.number}\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filterValue, onChangeFilter }) => {\r\n  const filterInputId = nanoid();\r\n  return (\r\n    <div className={styles.FilterThumb}>\r\n      <label htmlFor={filterInputId} className={styles.label}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        required\r\n        onChange={onChangeFilter}\r\n        id={filterInputId}\r\n        value={filterValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactItem = (props, onDeleteContact) => {\r\n  const { id, name, number } = props;\r\n  return (\r\n    <li className={styles.contactsItem} id={id}>\r\n      <p className={styles.contactsName}>{name}:</p>\r\n      <p className={styles.contactsNumber}>{number}</p>\r\n      <button\r\n        className={styles.contactsButton}\r\n        type=\"button\"\r\n        // onClick={() => {\r\n        //   onDeleteContact(id);\r\n        // }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"./ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  console.log(contacts);\r\n  return (\r\n    <ul className={styles.contactsList}>\r\n      {contacts.map((contact) => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Phonebook.module.css\";\r\nimport ContactForm from \"./ContactForm/ContactForm \";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n      // contacts: [contact, ...prevState],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (event) => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter((contact) => contact.id !== contactId),\r\n    }));\r\n  };\r\n  //   formSubmitHandler = (data) => {\r\n  //     console.log(data);\r\n  //   };\r\n\r\n  render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onFormSubmit={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter\r\n          filterValue={this.state.filter}\r\n          onChangeFilter={this.changeFilter}\r\n        />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          //   onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default App;\r\n","import \"modern-normalize/modern-normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3s47a\",\"contactsItem\":\"ContactList_contactsItem__3E-1F\",\"contactsName\":\"ContactList_contactsName__bMTuS\",\"contactsNumber\":\"ContactList_contactsNumber__2USIJ\",\"contactsButton\":\"ContactList_contactsButton__2gxi3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterThumb\":\"Filter_FilterThumb__1Ctc_\",\"label\":\"Filter_label__2aOok\",\"input\":\"Filter_input__3SIEZ\"};"],"sourceRoot":""}